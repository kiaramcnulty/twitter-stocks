{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["library","add","fab","faCheckSquare","faCoffee","TweetList","tweets","map","tweet","id","Tweet","style","backgroundColor","Item","align","Container","size","icon","fontSize","text","App","useState","stockName","setStockName","data","stockList","setStockList","url","useEffect","a","fetch","response","ok","json","fetchStockList","fluid","marginTop","marginBottom","left","Trigger","color","Menu","Content","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.509bb034.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport 'rbx/index.css';\nimport { Container, Title, Box, Media, Image, Content, Footer, Dropdown, Button } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fab, faCheckSquare, faCoffee )\n\nconst Banner = ({ title }) => (\n  <Title style = {{color: 'white', paddingTop:'40px', textAlign:\"center\"}}>{ title }</Title>\n);\n\nconst TweetList = ({ tweets }) => (\n  <div>\n    {/* { courses.map(course => <TwitterTweetEmbed tweetId={parseInt(course.id)}/>) } */}\n    { tweets.map(tweet => <Tweet key={tweet.id} tweet={ tweet } />) }\n  </div>\n);\n\n// pass in\nconst Tweet = ({ tweet }) => (\n  <Box style = {{backgroundColor: '##F0F0F0'}}>\n  <Media>\n    <Media.Item align=\"left\">\n      <Image.Container size={64}>\n        <FontAwesomeIcon icon={[\"fab\", \"twitter-square\"]} fontSize={'50px'} />\n      </Image.Container>\n    </Media.Item>\n    <Media.Item>\n      <Content>\n        <p>\n          {tweet.text}\n        </p>\n      </Content>\n    </Media.Item>\n  </Media>\n</Box>\n);\n\nconst App = () => {\n  // const [stockName, setStockName] = useState({ name: [] });\n  let stockTitle = 'AAPL';\n  const [stockName, setStockName] = useState('AAPL');\n  const [stockList, setStockList] = useState({ data: [] });\n  const url = 'http://localhost:8081/stocks/'+stockName;\n\n  useEffect(() => {\n    const fetchStockList = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setStockList(json);\n    }\n    fetchStockList();\n  }, [stockName])\n\n  if (stockList.data) {\n    return (\n      <div style = {{backgroundColor: '#1DA1F2'}}>\n      <Container fluid>\n\n      <Dropdown style = {{marginTop: '30px', marginBottom: '30px', left:'45%' }}>\n        <Dropdown.Trigger>\n          <Button style = {{backgroundColor: '#657786'}}>\n            <span style = {{color: 'white', fontSize:'35px'}}>${stockName}</span>\n          </Button>\n        </Dropdown.Trigger>\n        <Dropdown.Menu>\n          <Dropdown.Content>\n            <Dropdown.Item onClick={() => setStockName(\"AAPL\")}>AAPL</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"ABNB\")}>ABNB</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"ADBE\")}>ADBE</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"ALK\")}>ALK</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"AMZN\")}>AMZN</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"BABA\")}>BABA</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"BMBL\")}>BMBL</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"DIS\")}>DIS</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"EBAY\")}>EBAY</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"FB\")}>FB</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"GOOG\")}>GOOG</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"MSFT\")}>MSFT</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"NASDAQ\")}>NASDAQ</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"NFLX\")}>NFLX</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"NVDA\")}>NVDA</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"PAYPL\")}>PYPL</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"QQQ\")}>QQQ</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"TGT\")}>TGT</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"TSLA\")}>TSLA</Dropdown.Item>\n            <Dropdown.Item onClick={() => setStockName(\"UPS\")}>UPS</Dropdown.Item>\n          </Dropdown.Content>\n        </Dropdown.Menu>\n        </Dropdown>\n        \n        <TweetList tweets={ stockList.data } />\n        <Footer style = {{backgroundColor: '#1DA1F2'}}></Footer>\n      </Container>\n      </div>\n\n    );\n  }\n  else {\n    return (<div>Loading...</div>);\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// const express = require(\"express\");\n// const app = express();\n\n// const routes = require(\"./routes\");\n// app.use(\"\", routes);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}