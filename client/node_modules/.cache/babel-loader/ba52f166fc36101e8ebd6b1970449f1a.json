{"ast":null,"code":"var _jsxFileName = \"/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx'; // Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n// function App() {\n//   const [stockData, setStockData] = useState([]);\n//   useEffect(() => {\n//     const fetchStockData = async () => {\n//       const response = await fetch('http://localhost:8081/stocks');\n//       if (!response.ok) throw response;\n//       const json = await response.json();\n//       setStockData(json);\n//   }\n//   fetchStockData();\n//   }, [])\n//   if (!stockData.data) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. Loading...\n//           </p>\n//         </header>\n//       </div>\n//     );\n//   }\n//   else if (stockData.data.length > 0) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL\n//           </p>\n//           <TwitterTweetEmbed tweetId={stockData.data[0].id}/>\n//         </header>\n//       </div>\n//     )\n//   }\n//   else {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. No tweets found.\n//           </p>\n//         </header>\n//       </div>\n//     )\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseList = ({\n  courses\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: courses.map(course => /*#__PURE__*/_jsxDEV(TwitterTweetEmbed, {\n    tweetId: course.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 29\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 3\n}, this);\n\n_c = CourseList;\n\nconst App = () => {\n  _s();\n\n  const [schedule, setSchedule] = useState({\n    title: '',\n    courses: []\n  });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    };\n\n    fetchSchedule();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      title: schedule.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n      courses: schedule.courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KhhqTe5Juw1aG/YphztQBl/GegA=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CourseList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/client/src/App.js"],"names":["React","useState","useEffect","TwitterTweetEmbed","Button","Container","Title","CourseList","courses","map","course","id","App","schedule","setSchedule","title","url","fetchSchedule","response","fetch","ok","json"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAO,eAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,KAAzC,C,CAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAA,YACIA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBAAI,QAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEA,MAAM,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAtB;AADJ;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,U;;AAMN,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaP,IAAAA,OAAO,EAAE;AAAtB,GAAD,CAAxC;AACA,QAAMQ,GAAG,GAAG,6DAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,UAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB,MAAMF,QAAN;AAClB,YAAMG,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KALD;;AAMAJ,IAAAA,aAAa;AACd,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAGJ,QAAQ,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAGF,QAAQ,CAACL;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMI,G;;MAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\n\n// Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n\n\n// function App() {\n\n//   const [stockData, setStockData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchStockData = async () => {\n//       const response = await fetch('http://localhost:8081/stocks');\n//       if (!response.ok) throw response;\n//       const json = await response.json();\n//       setStockData(json);\n//   }\n//   fetchStockData();\n//   }, [])\n\n//   if (!stockData.data) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. Loading...\n//           </p>\n//         </header>\n//       </div>\n//     );\n//   }\n//   else if (stockData.data.length > 0) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL\n//           </p>\n//           <TwitterTweetEmbed tweetId={stockData.data[0].id}/>\n//         </header>\n//       </div>\n//     )\n//   }\n//   else {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. No tweets found.\n//           </p>\n//         </header>\n//       </div>\n//     )\n\n//   }\n  \n// }\n\nconst CourseList = ({ courses }) => (\n  <div>\n    { courses.map(course => <TwitterTweetEmbed tweetId={course.id}/>) }\n  </div>\n);\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({ title: '', courses: [] });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    }\n    fetchSchedule();\n  }, [])\n\n  return (\n    <Container>\n      <Banner title={ schedule.title } />\n      <CourseList courses={ schedule.courses } />\n    </Container>\n\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}