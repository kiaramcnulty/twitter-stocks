{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    hidden: PropTypes.bool,\n    invisible: PropTypes.bool,\n    srOnly: PropTypes.bool\n  };\n});\nexport var transform = function transform(props) {\n  var className = props.className,\n      hidden = props.hidden,\n      invisible = props.invisible,\n      srOnly = props.srOnly,\n      rest = tslib_1.__rest(props, [\"className\", \"hidden\", \"invisible\", \"srOnly\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-hidden\": hidden,\n      \"is-invisible\": invisible,\n      \"is-sr-only\": srOnly\n    }, className)\n  }, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/visibility.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAmBA,OAAO,IAAM,aAAa,GAAG,oBAAoB,CAAC,UAAA,IAAI;AAAA,SAAK;AACzD,IAAA,MAAM,EAAE,SAAS,CAAC,IADuC;AAEzD,IAAA,SAAS,EAAE,SAAS,CAAC,IAFoC;AAGzD,IAAA,MAAM,EAAE,SAAS,CAAC;AAHuC,GAAL;AAAA,CAAL,CAA1C;AAMP,OAAO,IAAM,SAAS,GAA8C,SAAvD,SAAuD,CAAA,KAAK,EAAG;AAC1E,MAAQ,SAAR,GAA0D,KAA1D,CAAQ,SAAR;AAAA,MAAmB,MAAnB,GAA0D,KAA1D,CAAmB,MAAnB;AAAA,MAA2B,SAA3B,GAA0D,KAA1D,CAA2B,SAA3B;AAAA,MAAsC,MAAtC,GAA0D,KAA1D,CAAsC,MAAtC;AAAA,MAA8C,IAA9C,GAA8C,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,CAAA,CAA9C;;AAEA,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,mBAAa,MADf;AAEE,sBAAgB,SAFlB;AAGE,oBAAc;AAHhB,KADmB,EAMnB,SANmB;AADvB,GAAA,EASK,IATL,CAAA;AAWD,CAdM;AAgBP,OAAO,IAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    hidden: PropTypes.bool,\n    invisible: PropTypes.bool,\n    srOnly: PropTypes.bool,\n}));\nexport const transform = props => {\n    const { className, hidden, invisible, srOnly } = props, rest = tslib_1.__rest(props, [\"className\", \"hidden\", \"invisible\", \"srOnly\"]);\n    return Object.assign({ className: classNames({\n            \"is-hidden\": hidden,\n            \"is-invisible\": invisible,\n            \"is-sr-only\": srOnly,\n        }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=visibility.js.map"]},"metadata":{},"sourceType":"module"}