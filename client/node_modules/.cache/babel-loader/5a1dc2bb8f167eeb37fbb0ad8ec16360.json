{"ast":null,"code":"var _jsxFileName = \"/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx'; // Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n// function App() {\n//   const [stockData, setStockData] = useState([]);\n//   useEffect(() => {\n//     const fetchStockData = async () => {\n//       const response = await fetch('http://localhost:8081/stocks');\n//       if (!response.ok) throw response;\n//       const json = await response.json();\n//       setStockData(json);\n//   }\n//   fetchStockData();\n//   }, [])\n//   if (!stockData.data) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. Loading...\n//           </p>\n//         </header>\n//       </div>\n//     );\n//   }\n//   else if (stockData.data.length > 0) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL\n//           </p>\n//           <TwitterTweetEmbed tweetId={stockData.data[0].id}/>\n//         </header>\n//       </div>\n//     )\n//   }\n//   else {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. No tweets found.\n//           </p>\n//         </header>\n//       </div>\n//     )\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Banner = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(Title, {\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n\n_c = Banner;\n\nconst CourseList = ({\n  courses\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n    course: course\n  }, course.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 29\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this); // pass in\n\n\n_c2 = CourseList;\n\nconst Course = ({\n  course\n}) => /*#__PURE__*/_jsxDEV(\"li\", {\n  children: course.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n\n_c3 = Course;\n\nconst App = () => {\n  _s();\n\n  const [schedule, setSchedule] = useState({\n    data: []\n  });\n  const url = 'http://localhost:8081/stocks';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    };\n\n    fetchSchedule();\n  }, []);\n\n  if (schedule.data) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {\n        title: 'AAPL'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        courses: schedule.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(App, \"QGOYWwfnUQetL34tGkU95yuWza0=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"CourseList\");\n$RefreshReg$(_c3, \"Course\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/client/src/App.js"],"names":["React","useState","useEffect","TwitterTweetEmbed","Button","Container","Title","Banner","title","CourseList","courses","map","course","id","Course","text","App","schedule","setSchedule","data","url","fetchSchedule","response","fetch","ok","json"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAO,eAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,KAAzC,C,CAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACb,QAAC,KAAD;AAAA,YAASA;AAAT;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,M;;AAIN,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAA,YAEIA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBAAI,QAAC,MAAD;AAAwB,IAAA,MAAM,EAAGA;AAAjC,KAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,UAAtB;AAFJ;AAAA;AAAA;AAAA;AAAA,QADF,C,CAOA;;;MAPMJ,U;;AAQN,MAAMK,MAAM,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,kBACb;AAAA,YACIA,MAAM,CAACG;AADX;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMD,M;;AAMN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AAAEkB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;AACA,QAAMC,GAAG,GAAG,8BAAZ;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,UAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB,MAAMF,QAAN;AAClB,YAAMG,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KALD;;AAMAJ,IAAAA,aAAa;AACd,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIJ,QAAQ,CAACE,IAAb,EAAmB;AACjB,wBACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAGF,QAAQ,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MASK;AACH,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD;AACF,CA1BD;;GAAMH,G;;MAAAA,G;AA4BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\n\n// Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n\n\n// function App() {\n\n//   const [stockData, setStockData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchStockData = async () => {\n//       const response = await fetch('http://localhost:8081/stocks');\n//       if (!response.ok) throw response;\n//       const json = await response.json();\n//       setStockData(json);\n//   }\n//   fetchStockData();\n//   }, [])\n\n//   if (!stockData.data) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. Loading...\n//           </p>\n//         </header>\n//       </div>\n//     );\n//   }\n//   else if (stockData.data.length > 0) {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL\n//           </p>\n//           <TwitterTweetEmbed tweetId={stockData.data[0].id}/>\n//         </header>\n//       </div>\n//     )\n//   }\n//   else {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>\n//             $AAPL. No tweets found.\n//           </p>\n//         </header>\n//       </div>\n//     )\n\n//   }\n  \n// }\nconst Banner = ({ title }) => (\n  <Title>{ title }</Title>\n);\n\nconst CourseList = ({ courses }) => (\n  <div>\n    {/* { courses.map(course => <TwitterTweetEmbed tweetId={parseInt(course.id)}/>) } */}\n    { courses.map(course => <Course key={course.id} course={ course } />) }\n  </div>\n);\n\n// pass in\nconst Course = ({ course }) => (\n  <li>\n    { course.text }\n  </li>\n);\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({ data: [] });\n  const url = 'http://localhost:8081/stocks';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    }\n    fetchSchedule();\n  }, [])\n\n  if (schedule.data) {\n    return (\n      <Container className=\"App-header\">\n        <Banner title={ 'AAPL' } />\n        <CourseList courses={ schedule.data } />\n      </Container>\n\n    );\n  }\n  else {\n    return (<div>loading...</div>);\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}