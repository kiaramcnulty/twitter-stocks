{"ast":null,"code":"import _defineProperty from \"/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { TagGroup } from \"./tag-group\";\nexport var TAG_DEFAULTS = {\n  sizes: [\"normal\", \"medium\", \"large\"]\n};\nexport var Tag = Object.assign(forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var children = _a.children,\n      className = _a.className,\n      color = _a.color,\n      isDelete = _a.delete,\n      rounded = _a.rounded,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"delete\", \"rounded\", \"size\"]);\n\n  var allowedChildren = isDelete === true ? undefined : children;\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"tag\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-delete\", isDelete), _defineProperty(_classNames, \"is-rounded\", rounded), _classNames), className),\n    children: allowedChildren,\n    ref: ref\n  }, rest));\n}, {\n  as: \"span\"\n}), {\n  Group: TagGroup\n});\nTag.displayName = \"Tag\";\nTag.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  delete: PropTypes.bool,\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/tag/tag.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAIA,SAAS,QAAT,QAAyB,aAAzB;AAEA,OAAO,IAAM,YAAY,GAAG;AAC1B,EAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB;AADmB,CAArB;AAqBP,OAAO,IAAM,GAAG,GAAG,MAAM,CAAC,MAAP,CACjB,YAAY,CACV,UACE,EADF,EAEE,GAFF,EAGI;AAAA;;AAFF,MAAE,QAAF,GAA6D,EAA7D,CAAE,QAAF;AAAA,MAAY,SAAZ,GAA6D,EAA7D,CAAY,SAAZ;AAAA,MAAuB,KAAvB,GAA6D,EAA7D,CAAuB,KAAvB;AAAA,MAAsC,QAAtC,GAA6D,EAA7D,CAA8B,MAA9B;AAAA,MAAgD,OAAhD,GAA6D,EAA7D,CAAgD,OAAhD;AAAA,MAAyD,IAAzD,GAA6D,EAA7D,CAAyD,IAAzD;AAAA,MAA+D,IAA/D,GAA+D,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,CAAA,CAA/D;;AAGA,MAAM,eAAe,GAAG,QAAQ,KAAK,IAAb,GAAoB,SAApB,GAAgC,QAAxD;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,KADmB,+DAGV,IAHU,GAGD,IAHC,6CAIV,KAJU,GAIA,KAJA,gCAKjB,WALiB,EAKJ,QALI,gCAMjB,YANiB,EAMH,OANG,iBAQnB,SARmB,CADf;AAWN,IAAA,QAAQ,EAAE,eAXJ;AAYN,IAAA,GAAG,EAAE;AAZC,GAAA,EAaF,IAbE,CAAR,CADF;AAiBD,CAxBS,EAyBV;AAAE,EAAA,EAAE,EAAE;AAAN,CAzBU,CADK,EA4BjB;AAAE,EAAA,KAAK,EAAE;AAAT,CA5BiB,CAAZ;AA+BP,GAAG,CAAC,WAAJ,GAAkB,KAAlB;AACA,GAAG,CAAC,SAAJ,GAAgB;AACd,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADO;AAEd,EAAA,MAAM,EAAE,SAAS,CAAC,IAFJ;AAGd,EAAA,OAAO,EAAE,SAAS,CAAC,IAHL;AAId,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAJQ,CAAhB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { TagGroup } from \"./tag-group\";\nexport const TAG_DEFAULTS = {\n    sizes: [\"normal\", \"medium\", \"large\"],\n};\nexport const Tag = Object.assign(forwardRefAs((_a, ref) => {\n    var { children, className, color, delete: isDelete, rounded, size } = _a, rest = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"delete\", \"rounded\", \"size\"]);\n    const allowedChildren = isDelete === true ? undefined : children;\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"tag\", {\n            [`is-${size}`]: size,\n            [`is-${color}`]: color,\n            \"is-delete\": isDelete,\n            \"is-rounded\": rounded,\n        }, className), children: allowedChildren, ref: ref }, rest)));\n}, { as: \"span\" }), { Group: TagGroup });\nTag.displayName = \"Tag\";\nTag.propTypes = {\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    delete: PropTypes.bool,\n    rounded: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=tag.js.map"]},"metadata":{},"sourceType":"module"}