{"ast":null,"code":"import { TwitterClient } from 'twitter-api-client';\n\"use strict\";\n\nconst express = require(\"express\");\n\nconst router = express.Router();\nrouter.route(\"/\").get((_req, res) => {\n  console.log(\"GET /\");\n  res.status(200).send({\n    data: \"App is running.\"\n  });\n}); // ---------------------------------------------------\n// Edit below this line\n// ---------------------------------------------------\n\nconst needle = require('needle'); // The code below sets the bearer token from your environment variables\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\n// export BEARER_TOKEN='YOUR-TOKEN'\n// const token = process.env.BEARER_TOKEN;\n\n\nconst token = 'AAAAAAAAAAAAAAAAAAAAAB%2FYPgEAAAAAgJxzmS02sHHN4CpHUB%2BkLRwF2OU%3DYebWHcaEqeuLioTDMNON0IvtbxEzzXiYEGsjWH3iOregXNbEL2';\nconst endpointUrl = \"https://api.twitter.com/2/tweets/search/recent\";\nconst twitterClient = new TwitterClient({\n  apiKey: 'EuIaLWJLgINKLb0DLVYpgonxb',\n  apiSecret: 'nLZv1JWNEzPJomrPDPKfFWWvS60PPmLUA7fRdR36AicTnCQh9W',\n  accessToken: '2390103912-5QOVKCvNF7JqY3u1OFGNmSpJhiDbL9m0qwhml7R',\n  accessTokenSecret: 'DyyWnvYEKjQbEQno3uoESDHs0IXLz8wkMA8uZ61nTamwi'\n}); // Search for a user\n\nasync function requestData() {\n  console.log(\"requesting data\");\n  const data = await twitterClient.accountsAndUsers.usersSearch({\n    q: 'twitterDev'\n  });\n  console.log(data);\n}\n\nasync function getRequest() {\n  // Edit query parameters below\n  // specify a search query, and any additional fields that are required\n  // by default, only the Tweet ID and text fields are returned\n  const params = {\n    'query': 'from:twitterdev -is:retweet',\n    'tweet.fields': 'author_id'\n  };\n  const res = await needle('get', endpointUrl, params, {\n    headers: {\n      \"User-Agent\": \"v2RecentSearchJS\",\n      \"authorization\": `Bearer ${token}`\n    }\n  });\n\n  if (res.body) {\n    return res.body;\n  } else {\n    throw new Error('Unsuccessful request');\n  }\n}\n\n(async () => {\n  var _process$exit2, _process2;\n\n  try {\n    // Make request\n    const response = await getRequest();\n    console.dir(response, {\n      depth: null\n    });\n  } catch (e) {\n    var _process$exit, _process;\n\n    console.log(e);\n    (_process$exit = (_process = process).exit) === null || _process$exit === void 0 ? void 0 : _process$exit.call(_process, -1);\n  }\n\n  (_process$exit2 = (_process2 = process).exit) === null || _process$exit2 === void 0 ? void 0 : _process$exit2.call(_process2);\n})();\n\nrouter.route(\"/stocks\").get((req, res) => {\n  console.log(\"GET /stocks\");\n  getRequest().then(result => {\n    console.log(result);\n    res.status(200).send(result);\n  }).catch(err => {\n    res.status(400).send(\"error\");\n  });\n});\nmodule.exports = router;","map":{"version":3,"sources":["/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/src/routes.js"],"names":["TwitterClient","express","require","router","Router","route","get","_req","res","console","log","status","send","data","needle","token","endpointUrl","twitterClient","apiKey","apiSecret","accessToken","accessTokenSecret","requestData","accountsAndUsers","usersSearch","q","getRequest","params","headers","body","Error","response","dir","depth","e","process","exit","req","then","result","catch","err","module","exports"],"mappings":"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","sourcesContent":["import { TwitterClient } from 'twitter-api-client';\n\n\"use strict\";\n\nconst express = require(\"express\");\nconst router = express.Router();\n\n\nrouter.route(\"/\")\n    .get((_req, res) => {\n        console.log(\"GET /\");\n        res.status(200).send({\n            data: \"App is running.\"\n        });\n    });\n    \n// ---------------------------------------------------\n// Edit below this line\n// ---------------------------------------------------\n\nconst needle = require('needle');\n\n// The code below sets the bearer token from your environment variables\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\n// export BEARER_TOKEN='YOUR-TOKEN'\n// const token = process.env.BEARER_TOKEN;\nconst token = 'AAAAAAAAAAAAAAAAAAAAAB%2FYPgEAAAAAgJxzmS02sHHN4CpHUB%2BkLRwF2OU%3DYebWHcaEqeuLioTDMNON0IvtbxEzzXiYEGsjWH3iOregXNbEL2';\n\nconst endpointUrl = \"https://api.twitter.com/2/tweets/search/recent\";\n\nconst twitterClient = new TwitterClient({\n  apiKey: 'EuIaLWJLgINKLb0DLVYpgonxb',\n  apiSecret: 'nLZv1JWNEzPJomrPDPKfFWWvS60PPmLUA7fRdR36AicTnCQh9W',\n  accessToken: '2390103912-5QOVKCvNF7JqY3u1OFGNmSpJhiDbL9m0qwhml7R',\n  accessTokenSecret: 'DyyWnvYEKjQbEQno3uoESDHs0IXLz8wkMA8uZ61nTamwi',\n});\n\n// Search for a user\nasync function requestData() {\n  console.log(\"requesting data\");\n  const data = await twitterClient.accountsAndUsers.usersSearch({ q: 'twitterDev' });\n  console.log(data);\n\n}\n\n\nasync function getRequest() {\n\n    // Edit query parameters below\n    // specify a search query, and any additional fields that are required\n    // by default, only the Tweet ID and text fields are returned\n    const params = {\n        'query': 'from:twitterdev -is:retweet',\n        'tweet.fields': 'author_id'\n    }\n\n    const res = await needle('get', endpointUrl, params, {\n        headers: {\n            \"User-Agent\": \"v2RecentSearchJS\",\n            \"authorization\": `Bearer ${token}`\n        }\n    })\n\n    if (res.body) {\n        return res.body;\n    } else {\n        throw new Error('Unsuccessful request');\n    }\n}\n\n(async () => {\n\n    try {\n        // Make request\n        const response = await getRequest();\n        console.dir(response, {\n            depth: null\n        });\n\n    } catch (e) {\n        console.log(e);\n        process.exit?.(-1);\n    }\n    process.exit?.();\n})();\n\n\nrouter.route(\"/stocks\")\n    .get((req, res) => {\n        console.log(\"GET /stocks\");\n\n        getRequest().then(result => {\n            console.log(result);\n            res.status(200).send(result);\n        }).catch(err => {\n            res.status(400).send(\"error\");\n\n        }) \n    })\n\nmodule.exports = router;"]},"metadata":{},"sourceType":"module"}