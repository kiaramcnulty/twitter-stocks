{"ast":null,"code":"var _jsxFileName = \"/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stocks = [\"Google\", \"Facebook\", \"Amazon\"]; // Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n\nconst needle = require('needle'); // The code below sets the bearer token from your environment variables\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\n// export BEARER_TOKEN='YOUR-TOKEN'\n\n\nconst token = process.env.BEARER_TOKEN;\nconst endpointUrl = \"https://api.twitter.com/2/tweets/search/recent\";\n\nasync function getRequest() {\n  // Edit query parameters below\n  // specify a search query, and any additional fields that are required\n  // by default, only the Tweet ID and text fields are returned\n  const params = {\n    'query': 'from:twitterdev -is:retweet',\n    'tweet.fields': 'author_id'\n  };\n  const res = await needle('get', endpointUrl, params, {\n    headers: {\n      \"User-Agent\": \"v2RecentSearchJS\",\n      \"authorization\": `Bearer ${token}`\n    }\n  });\n\n  if (res.body) {\n    return res.body;\n  } else {\n    throw new Error('Unsuccessful request');\n  }\n}\n\n(async () => {\n  try {\n    // Make request\n    const response = await getRequest();\n    console.dir(response, {\n      depth: null\n    });\n  } catch (e) {\n    var _process$exit, _process;\n\n    console.log(e);\n    (_process$exit = (_process = process).exit) === null || _process$exit === void 0 ? void 0 : _process$exit.call(_process, -1);\n  }\n\n  process.exit();\n})();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: stocks[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stocks[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stocks[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kiaramcnulty/Documents/396WebDev/twitter-stocks/src/App.js"],"names":["stocks","needle","require","token","process","env","BEARER_TOKEN","endpointUrl","getRequest","params","res","headers","body","Error","response","console","dir","depth","e","log","exit","App"],"mappings":";;AACA,OAAO,WAAP;;AAEA,IAAIA,MAAM,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAAb,C,CAEA;AACA;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB,C,CAEA;AACA;AACA;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAA1B;AAEA,MAAMC,WAAW,GAAG,gDAApB;;AAEA,eAAeC,UAAf,GAA4B;AAExB;AACA;AACA;AACA,QAAMC,MAAM,GAAG;AACX,aAAS,6BADE;AAEX,oBAAgB;AAFL,GAAf;AAKA,QAAMC,GAAG,GAAG,MAAMT,MAAM,CAAC,KAAD,EAAQM,WAAR,EAAqBE,MAArB,EAA6B;AACjDE,IAAAA,OAAO,EAAE;AACL,oBAAc,kBADT;AAEL,uBAAkB,UAASR,KAAM;AAF5B;AADwC,GAA7B,CAAxB;;AAOA,MAAIO,GAAG,CAACE,IAAR,EAAc;AACV,WAAOF,GAAG,CAACE,IAAX;AACH,GAFD,MAEO;AACH,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;AACJ;;AAED,CAAC,YAAY;AAET,MAAI;AACA;AACA,UAAMC,QAAQ,GAAG,MAAMN,UAAU,EAAjC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB;AAClBG,MAAAA,KAAK,EAAE;AADW,KAAtB;AAIH,GAPD,CAOE,OAAOC,CAAP,EAAU;AAAA;;AACRH,IAAAA,OAAO,CAACI,GAAR,CAAYD,CAAZ;AACA,iCAAAd,OAAO,EAACgB,IAAR,+EAAe,CAAC,CAAhB;AACH;;AACDhB,EAAAA,OAAO,CAACgB,IAAR;AACH,CAdD;;AAgBA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,kBACGrB,MAAM,CAAC,CAAD;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACGA,MAAM,CAAC,CAAD;AADT;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,kBACGA,MAAM,CAAC,CAAD;AADT;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAhBQqB,G;AAkBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nlet stocks = [\"Google\", \"Facebook\", \"Amazon\"]\n\n// Search for Tweets within the past seven days\n// https://developer.twitter.com/en/docs/twitter-api/tweets/search/quick-start/recent-search\n\nconst needle = require('needle');\n\n// The code below sets the bearer token from your environment variables\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\n// export BEARER_TOKEN='YOUR-TOKEN'\nconst token = process.env.BEARER_TOKEN;\n\nconst endpointUrl = \"https://api.twitter.com/2/tweets/search/recent\";\n\nasync function getRequest() {\n\n    // Edit query parameters below\n    // specify a search query, and any additional fields that are required\n    // by default, only the Tweet ID and text fields are returned\n    const params = {\n        'query': 'from:twitterdev -is:retweet',\n        'tweet.fields': 'author_id'\n    }\n\n    const res = await needle('get', endpointUrl, params, {\n        headers: {\n            \"User-Agent\": \"v2RecentSearchJS\",\n            \"authorization\": `Bearer ${token}`\n        }\n    })\n\n    if (res.body) {\n        return res.body;\n    } else {\n        throw new Error('Unsuccessful request');\n    }\n}\n\n(async () => {\n\n    try {\n        // Make request\n        const response = await getRequest();\n        console.dir(response, {\n            depth: null\n        });\n\n    } catch (e) {\n        console.log(e);\n        process.exit?.(-1);\n    }\n    process.exit();\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          {stocks[0]}\n        </p>\n        <p>\n          {stocks[1]}\n        </p>\n        <p>\n          {stocks[2]}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}